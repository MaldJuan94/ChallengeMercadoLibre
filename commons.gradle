apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "dagger.hilt.android.plugin"

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName Releases.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "size", "Large"
        buildConfigField "String", "flavor", '"Android"'
    }

    buildTypes {
        release {
            //minifyEnabled true
            //shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            manifestPlaceholders["PERF_LOGCAT"] = "false"
        }

        debug {
            debuggable true
            testCoverageEnabled true
            //minifyEnabled false
            //shrinkResources false
            manifestPlaceholders["PERF_LOGCAT"] = "true"
            matchingFallbacks = ["release"]
        }
    }

    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests.returnDefaultValues true
        animationsDisabled true
        unitTests {
            includeAndroidResources true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        exclude("META-INF/*.kotlin_module")
    }

    kapt {
        generateStubs = true
    }
}

dependencies {

    implementation AndroidLibraries.coreKtx
    implementation KotlinLibraries.kotlin

    //Coroutines
    implementation KotlinLibraries.coreKotlinCoroutine
    implementation KotlinLibraries.androidKotlinCoroutine

    //Testing
    testImplementation TestLibraries.junit
    testImplementation TestLibraries.coreTesting
    testImplementation TestLibraries.coroutinesTesting
    testImplementation TestLibraries.mockk
    androidTestImplementation TestLibraries.mockkAndroid
    androidTestImplementation TestLibraries.junitExt
    androidTestImplementation TestLibraries.espresso
    androidTestImplementation TestLibraries.testRunner
    androidTestImplementation TestLibraries.testRules

    //--Dependence Injection DI
    implementation Libraries.daggerHilt
    kapt Libraries.daggerHiltCompiler
    implementation AndroidLibraries.activityKtx
    implementation AndroidLibraries.fragmentKtx

}